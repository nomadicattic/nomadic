version: '3'

vars:
  NAME: "nomadic"
  MAJOR:
    sh: git describe --tags --abbrev=0 | cut -f1 -d.
  MINOR:
    sh: git describe --tags --abbrev=0 | cut -f2 -d.
  PATCH:
    sh: git describe --tags --abbrev=0 | cut -f3 -d.
  BRANCH:
    sh: git symbolic-ref --short HEAD | cut -f1 -d-
  COMMITS:
    sh: git describe --tags | cut -f2 -d-
  HASH:
    sh: git rev-parse --short HEAD
  VERSION0: "{{.MAJOR}}.{{.MINOR}}.{{.PATCH}}"
  VERSION1:
    sh: if [ "{{.BRANCH}}" != "main" ]; then echo "{{.VERSION0}}-issue.{{.BRANCH}}"; else echo "{{.VERSION0}}"; fi 
  VERSION:
    sh: if [ ! -z "{{.COMMITS}}" ] && [ "{{.COMMITS}}" != "{{.VERSION0}}" ]; then echo "{{.VERSION1}}-build.{{.COMMITS}}"; else echo "{{.VERSION1}}"; fi

tasks:
  default:
    desc: Shows task descriptions
    cmds:
      - task --list
  
  tidy:
    desc: Tidies modules
    cmds:
      - go mod tidy

  build:
    desc: Builds go binary
    sources:
      - go.mod
      - go.sum
      - ./**/*.go
    cmds:
      - go build -ldflags="-X 'main.version={{.VERSION}}' -X 'main.hash={{.HASH}}'"
    status:
      - test -f {{.NAME}}
  
  test:
    desc: Runs unit tests with coverage
    cmds:
      - go test -v -cover ./...
  
  clean:
    desc: Removes go binary
    cmds:
      - rm -f {{.NAME}}
